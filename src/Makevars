# PKG_FCFLAGS = $(SHLIB_OPENMP_FFLAGS)
PKG_FCFLAGS=-fno-stack-protector
PKG_CFLAGS=-fno-stack-protector

C_SRCS := $(wildcard *.cpp)   
C_OBJS := $(patsubst %cpp, %o, $(SRCS)) 
# utils_and_wrappers.o

OBJ_NETCDF=
# OBJ_NETCDF=mo_netcdf.o

OBJS := mo_julian.o mo_percentile.o mo_smi_constants.o mo_sort.o mo_utils.o \
	InputOutput.o mo_global_variables.o mo_drought_evaluation.o
SRCS := $(patsubst %o, %f90, $(OBJS)) 

################################################################################
R_ARCH=
DIR_NETCDF=D:/GitHub/hydro/netcdf-fortran-ex/netcdff5

FCFLAGS2 = -I$(DIR_NETCDF)/include
	# -DHAVE_LIBUDUNITS2 -DHAVE_DECL_NC_RENAME_GRP=1 \

# ${R_ARCH}
LIBS2 = -L$(DIR_NETCDF)/lib -lnetcdff -lnetcdf

# PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CFLAGS) $(LIBS2)


all:
	# echo @$(MAKE) $(SHLIB)
	@$(MAKE) $(SHLIB)
	@rm -f *.mod *.o 
	#*.dll *.so

$(SHLIB): $(OBJS) ${C_OBJS}


# init.o
# init.o: mo_drought_evaluation.o

mo_drought_evaluation.o: InputOutput.o mo_percentile.o mo_sort.o mo_utils.o

InputOutput.o: InputOutput.f90 mo_kind.o mo_global_variables.o mo_smi_constants.o $(OBJ_NETCDF)
# 	$(FC) $(FCFLAGS) -c -o $@ $<

# $(OBJ_NETCDF): mo_netcdf.f90 mo_kind.o
# 	$(FC) $(PKG_FCFLAGS) $(FCFLAGS2) $(LIBS2) -c $< -o $@

mo_global_variables.o: mo_global_variables.f90 mo_kind.o mo_julian.o
# 	$(FC) $(FCFLAGS) -c -o $@ $<

# $(OBJS): ${SRCS} mo_kind.o 

.PHONY: clean
clean:
	@rm -f *.mod *.o *.dll

## Conclusion
#  1. netcdf-fortran not work in windows

