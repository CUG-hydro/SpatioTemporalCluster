% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/droughtIndicator.R
\name{droughtIndicator}
\alias{droughtIndicator}
\title{droughtIndicator}
\usage{
droughtIndicator(mat, mask, SMI_thld, exceeding = TRUE, masked = FALSE)
}
\arguments{
\item{mat}{double matrix, with the dim of \verb{[ngrid, nmonth]}, (\code{nmask = nrow*ncol}).
SMI drought index.}

\item{mask}{logical matrix, \verb{[nrow, ncol]}, only TRUE will be proceed.}

\item{SMI_thld}{double number,}

\item{exceeding}{Boolean. How to define a event? Exceed the threshold or less than?
For examples, for heatwaves, \code{exceeding} should be true; for drought, cold waves
\code{exceeding} should be false.}

\item{masked}{If true, mat will be a 2d matrix, with the dimension of \verb{[nCells, ngrid]}.
If not, 3d mat will be masked by \code{mask} and transfer to 2d matrix.}
}
\value{
\itemize{
\item SMIc a drought status array with 0 (non-drought), 1 (drought), -9999 (NA).
\item cellCoor index of masked region.
}
}
\description{
Return a drought status array with 0 (non-drought), 1 (drought), -9999 (NA).
}
\examples{
# devtools::load_all()
library(heatwave)

{
    set.seed(1)
    n <- 100
    nrow <- n
    ncol <- n
    ngrid <- nrow * ncol
    ntime <- 12

    mat <- matrix(rnorm(nrow * ncol * ntime), ngrid, ntime)
    SMI_thld <- 0.5
    mask <- matrix(mat[, 1], nrow, ncol) > SMI_thld
    arr <- array(mat, dim = c(nrow, ncol, ntime)) > SMI_thld
}

{
    library(JuliaCall)
    julia_setup(rebuild = TRUE)
    julia_source("cluster/src/cluster.jl")
    # system.time(res <- julia_call("cluster.spatial_cluster", arr))
    # names(res) <- c("nC", "cno", "IdClusters")
    res = julia_call("cluster.cluster_spatiotemporal", arr)
}

r <- droughtIndicator(mat, mask, SMI_thld)
r_cluster <- ClusterEvolution(r$SMIc, r$cellCoor)

{
    system.time(r_status <- ClusterStats(mat, mask, SMI_thld, r_cluster$idCluster, r_cluster$shortCnoList))
}

## 2. visualization ------------------------------------------------------------
# devtools::install_github("kongdd/Ipaper")
{
    p <- plot.cluster(r_cluster$idCluster, 1:6)
    ratio <- 0.8
    write_fig(p, "b.pdf", 12 * ratio, 8 * ratio)
}

{
    p <- plot.cluster(idC, 1:6)
    ratio <- 0.8
    write_fig(p, "r_julia.pdf", 12 * ratio, 8 * ratio)
}

{
    p <- plot.cluster(idC2, 1:6)
    ratio <- 0.8
    write_fig(p, "r_julia_final.pdf", 12 * ratio, 8 * ratio)
}
}
