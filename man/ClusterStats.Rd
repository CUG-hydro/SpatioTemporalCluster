% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClusterStats.R
\name{ClusterStats}
\alias{ClusterStats}
\title{Calculate drought status}
\usage{
ClusterStats(
  mat,
  mask,
  SMI_thld,
  idCluster,
  shortCnoList,
  exceeding = TRUE,
  mGridArea = NULL,
  masked = FALSE
)
}
\arguments{
\item{mat}{double matrix, with the dim of \verb{[ngrid, nmonth]}, (\code{nmask = nrow*ncol}).
SMI drought index.}

\item{mask}{logical matrix, \verb{[nrow, ncol]}, only TRUE will be proceed.}

\item{SMI_thld}{double number,}

\item{idCluster}{array of cluster num_id, with the dim \verb{[nrow, ncol, ntime]}.}

\item{shortCnoList}{vector, cluster num_id}

\item{exceeding}{Boolean. How to define a event? Exceed the threshold or less than?
For examples, for heatwaves, \code{exceeding} should be true; for drought, cold waves
\code{exceeding} should be false.}

\item{mGridArea}{matrix of grid area}

\item{masked}{If true, mat will be a 2d matrix, with the dimension of \verb{[nCells, ngrid]}.
If not, 3d mat will be masked by \code{mask} and transfer to 2d matrix.}
}
\description{
Calculate drought status
}
\examples{
# devtools::load_all()
library(heatwave)

{
    set.seed(1)
    
    n = 1000
    nrow <- n
    ncol <- n
    ngrid <- nrow*ncol
    ntime <- 12
    
    mat <- matrix(rnorm(nrow*ncol*ntime), ngrid, ntime)
    SMI_thld <- 0.5
    mask <- matrix(mat[,1], nrow, ncol) > SMI_thld
    
    arr <- array(mat, dim = c(nrow, ncol, ntime)) > SMI_thld
}

library(JuliaCall)
julia_source("external/find_neighbors.jl")
idC = julia_call("spatial_cluster", arr)
idC2 = julia_call("time_connect", idC, factor = 1e3)

r  <- droughtIndicator( mat, mask, SMI_thld)    
r_cluster <- ClusterEvolution(r$SMIc, r$cellCoor)

{
   
    system.time(r_status  <- ClusterStats(mat, mask, SMI_thld, r_cluster$idCluster, r_cluster$shortCnoList))
}

## 2. visualization ------------------------------------------------------------
# devtools::install_github("kongdd/Ipaper")
{
    p <- plot.cluster(r_cluster$idCluster, 1:6)
    ratio = 0.8
    write_fig(p, "b.pdf", 12*ratio, 8*ratio)
}

{
    p <- plot.cluster(idC, 1:6)
    ratio = 0.8
    write_fig(p, "r_julia.pdf", 12*ratio, 8*ratio)
}

{
    p <- plot.cluster(idC2, 1:6)
    ratio = 0.8
    write_fig(p, "r_julia_final.pdf", 12*ratio, 8*ratio)
}
}
